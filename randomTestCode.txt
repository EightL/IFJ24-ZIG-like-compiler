********************************************************
DISCLAIMER!!!!! - MAY NOT BE 100% SYNTACTICALLY CORRECT
********************************************************
    const ifj = @import("ifj24.zig");

    pub fn main() i32 {
        var x : i32 = 0;
        while(x < 3){
            if (x == 2){
                ifj.write("Two\n");
            }
            else{
            }
            x = x + 1;
        }
    }

///////////////////////////
Tests everything except while and function recursion

    pub fn main() void{
        var y : i32 = 0;
        var x = max(5);
        var d: f64 = ifj.i2f(8);
        const s = "Hola\n";
    }

    pub fn max(m: i32) i32{
        var z = 12 + 3;
        var x: ?int32 = 0;
        if (x) |TEMP| {
            if (TEMP == 3){
                z = TEMP;
            }
            else{
                z = x + 12/5; // 12 5 / x +
            }
            x = 1;
            return x;
        }
        else{
            return 1;
        }
        return 1;
    }

/////////////////////////////
Tests nested while

    pub fn main() void{
        var x = 0;
        while(x < 5){
            x = 5;
            var z = 0;
            while(x) |yx| {
                z = yx;
            }
        }
    }

/////////////////////////////
Recursion test

    pub fn main() void{
        var x = dec(4);
    }

    pub fn dec(m: i32) i32{
        var result: i32 = 0;
        if (m < 2){
            result = 1;
        }
        else{
            m = m-1;
            result = dec(m);
        }
        return result;
    }
